{"version":3,"sources":["node_modules/hyperapp/src/index.js","src/state.js","src/lib/lib.js","src/components/usertable.js","src/components/datatable.js","src/components/inputs.js","src/components/report/demographics.js","src/components/report/calc_item.js","src/components/report/counts.js","src/components/report/calc_score.js","src/components/report/categories.js","src/components/report/items.js","src/components/report/sections.js","src/components/report/exam.js","src/components/report/report.js","src/view.js","node_modules/debounce-promise/dist/index.js","src/actions/api.js","src/actions/records.js","src/actions/users.js","src/actions/actions.js","src/app.js"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","nodeName","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","setPartialState","concat","scheduleRender","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","insertBefore","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","target","source","out","value","slice","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","style","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","removeElement","done","removeChild","removeChildren","ondestroy","onremove","uniq","ar","filter","v","s","indexOf","pluck","ele","arr","a","sortByProp","p","b","display_time","stamp","currentDate","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","suffix","datestamp","record","context","timing","timestamp","timezone","time_from_seconds","time","hrs","Math","floor","mins","hrstr","round","UserRow","id","email","clickFn","e","UserTable","users","select","user","LrsRow","row","user_id","item_id","verb","timer","total","chosen_answer","correct","DataTable","sort","TextInput","field","func","init","label","InputFields","get_records","activity_id","user_select","Demographics","getByVerb","rs","find","correctAttempt","gradedAttempt","iscorrect","total_duration","reduce","t","r","toFixed","duration_of","correctAnswerLetter","letters","split","ga","guess","item","responses","forEach","displayText","attempted","completed","skipped","first","second","cor","groupByItemId","rv","x","el","sortAndGroupRecords","lrs","ITEMS","count_correct","tot","count_incorrect","count_skipped","percentage_correct","Categories","ItemGroup","external_id","Items","records","it","Section","Sections","Exam","Report","displaydata","no_user","get_users","selected_user","endpoint","fetch_lrsdata","fetch","res","json","get_lrsdata","log","set_lrsdata","log_state","lrsdata","lrsEvents","fetch_users","set_users","uu","u","__state","body"],"mappings":";AA6YC,aA7YM,SAASA,EAAEC,EAAMC,GAKfC,IAJHC,IAAAA,EAAO,GACPC,EAAW,GACXF,EAASG,UAAUH,OAEhBA,KAAW,GAAGC,EAAKG,KAAKD,UAAUH,IAElCC,KAAAA,EAAKD,QAAQ,CACdK,IAAAA,EAAOJ,EAAKK,MACZD,GAAAA,GAAQA,EAAKC,IACVN,IAAAA,EAASK,EAAKL,OAAQA,KACpBI,EAAAA,KAAKC,EAAKL,SAEA,MAARK,IAAyB,IAATA,IAA0B,IAATA,GACjCD,EAAAA,KAAKC,GAIX,MAAgB,mBAATP,EACVA,EAAKC,GAAc,GAAIG,GACvB,CACYJ,SAAAA,EACEC,WAAAA,GAAc,GAChBG,SAAAA,EACLH,IAAAA,GAAcA,EAAWQ,KAI/B,SAASC,EAAIC,EAAOC,EAASC,EAAMC,GACpCC,IAIAC,EAJAD,EAAM,GAAGA,IACTE,EAAeH,GAAaA,EAAUV,SAAS,IAAO,KACtDc,EAAUD,GAWLE,SAAAA,EAAeC,GACf,MAAA,CACKA,SAAAA,EAAQC,SAASC,cACf,WAAA,GACFP,SAAAA,EAAIQ,KAAKH,EAAQI,WAAY,SAASJ,GACvCA,OAAqB,IAArBA,EAAQK,SACXL,EAAQM,UACRP,EAAeC,MAlBID,CAAeF,GACxCU,EAAY,GAEZC,GAAc,EACdC,EAAcC,EAAMnB,GACpBoB,EA4EKC,SAAAA,EAAmBC,EAAMtB,EAAOC,GAClC,IAAA,IAAIH,KAAOG,EACU,mBAAjBA,EAAQH,GACV,SAASA,EAAKyB,GACLzB,EAAAA,GAAO,SAAS0B,GAClBC,IAAAA,EAASF,EAAOC,GAoBbC,MAlBe,mBAAXA,IACAA,EAAAA,EAAOC,EAAgBJ,EAAMJ,GAAcjB,IAIpDwB,GACAA,KAAYzB,EAAQ0B,EAAgBJ,EAAMJ,MACzCO,EAAOE,MAGLT,EAAAA,EAAcU,EACbN,EACAH,EAAMnB,EAAOyB,GACbP,IAKCO,GAtBV,CAwBE3B,EAAKG,EAAQH,IAChBuB,EACEC,EAAKO,OAAO/B,GACXE,EAAMF,GAAOqB,EAAMnB,EAAMF,IACzBG,EAAQH,GAAOqB,EAAMlB,EAAQH,KAI/BG,OAAAA,EA/GUoB,CAAmB,GAAIH,EAAaC,EAAMlB,IAItDmB,OAFPU,IAEOV,EAcEW,SAAAA,EAAYnC,GACZ,MAAgB,mBAATA,EACVmC,EAAYnC,EAAKsB,EAAaE,IACtB,MAARxB,EACEA,EACA,GAGCoC,SAAAA,IACM,GAAC3B,EAEVT,IAAAA,EAAOmC,EAAY7B,GAQhBc,IANHb,IAAcE,IACF4B,EAqOTA,SAAAA,EAAMC,EAAQzB,EAASF,EAASX,EAAMuC,GACzCvC,GAAAA,IAASW,QACN,GAAe,MAAXA,GAAmBA,EAAQG,WAAad,EAAKc,SAAU,CAC5D0B,IAAAA,EA5FCC,SAAAA,EAAczC,EAAMuC,GACvB1B,IAAAA,EACc,iBAATb,GAAqC,iBAATA,EAC/B0C,SAASC,eAAe3C,IACvBuC,EAAQA,GAA2B,QAAlBvC,EAAKc,UACrB4B,SAASE,gBACP,6BACA5C,EAAKc,UAEP4B,SAASD,cAAczC,EAAKc,UAEhCpB,IAAAA,EAAaM,EAAKN,WAClBA,GAAAA,EAAY,CACVA,EAAWmD,UACH9C,EAAAA,KAAK,WACF8C,EAAAA,SAAShC,KAInB,IAAA,IAAIiC,EAAI,EAAGA,EAAI9C,EAAKH,SAASF,OAAQmD,IAChCC,EAAAA,YACNN,EACGzC,EAAKH,SAASiD,GAAKX,EAAYnC,EAAKH,SAASiD,IAC9CP,IAKD,IAAA,IAAI9C,KAAQC,EACCmB,EAAAA,EAASpB,EAAMC,EAAWD,GAAO,KAAM8C,GAIpD1B,OAAAA,EA2DY4B,CAAczC,EAAMuC,GAC9BS,EAAAA,aAAaR,EAAY3B,GAEjB,MAAXF,GACY2B,EAAAA,EAAQzB,EAASF,GAGvB6B,EAAAA,OACL,GAAwB,MAApB7B,EAAQG,SACTK,EAAAA,UAAYnB,MACf,EAlEAiD,SAAcpC,EAASqC,EAAexD,EAAY6C,GACpD,IAAA,IAAI9C,KAAQ8B,EAAM2B,EAAexD,GAElCA,EAAWD,MACD,UAATA,GAA6B,YAATA,EACjBoB,EAAQpB,GACRyD,EAAczD,KAGhBoB,EAAAA,EACApB,EACAC,EAAWD,GACXyD,EAAczD,GACd8C,GAKFY,IAAAA,EAAK9B,EAAc3B,EAAWmD,SAAWnD,EAAW0D,SACpDD,GACQpD,EAAAA,KAAK,WACVc,EAAAA,EAASqC,KA+CZrC,CAAAA,EACAF,EAAQjB,WACRM,EAAKN,WACJ6C,EAAQA,GAA2B,QAAlBvC,EAAKc,UASpB,IANDuC,IAAAA,EAAW,GACXC,EAAW,GACXC,EAAc,GACdC,EAAc7C,EAAQd,SACtBA,EAAWG,EAAKH,SAEXiD,EAAI,EAAGA,EAAIU,EAAY7D,OAAQmD,IAAK,CAC/BA,EAAAA,GAAKjC,EAAQI,WAAW6B,GAEhCW,IAAAA,EAASC,EAAOF,EAAYV,IAClB,MAAVW,IACOA,EAAAA,GAAU,CAACF,EAAYT,GAAIU,EAAYV,KAO7Ca,IAHHb,IAAAA,EAAI,EACJa,EAAI,EAEDA,EAAI9D,EAASF,QAAQ,CACtB8D,IAAAA,EAASC,EAAOF,EAAYV,IAC5Bc,EAASF,EAAQ7D,EAAS8D,GAAKxB,EAAYtC,EAAS8D,KAEpDL,GAAAA,EAASG,GACXX,SAIEc,GAAU,MAAVA,GAAkBA,IAAWF,EAAOF,EAAYV,EAAI,IAQpDc,GAAU,MAAVA,GAAkBvC,EACN,MAAVoC,IACI5C,EAAAA,EAAS0C,EAAYT,GAAIU,EAAYV,GAAIjD,EAAS8D,GAAIpB,GAC5DoB,KAEFb,QACK,CACDe,IAAAA,EAAYR,EAASO,IAAW,GAEhCH,IAAWG,GACP/C,EAAAA,EAASgD,EAAU,GAAIA,EAAU,GAAIhE,EAAS8D,GAAIpB,GACxDO,KACSe,EAAU,GAEjBhD,EAAAA,EACAA,EAAQmC,aAAaa,EAAU,GAAIN,EAAYT,IAC/Ce,EAAU,GACVhE,EAAS8D,GACTpB,GAGI1B,EAAAA,EAAS0C,EAAYT,GAAI,KAAMjD,EAAS8D,GAAIpB,GAG3CqB,EAAAA,GAAU/D,EAAS8D,GAC5BA,SAhCc,MAAVF,GACY5C,EAAAA,EAAS0C,EAAYT,GAAIU,EAAYV,IAErDA,IAiCGA,KAAAA,EAAIU,EAAY7D,QACS,MAA1B+D,EAAOF,EAAYV,KACPjC,EAAAA,EAAS0C,EAAYT,GAAIU,EAAYV,IAErDA,IAGG,IAAA,IAAIA,KAAKO,EACPC,EAASR,IACEjC,EAAAA,EAASwC,EAASP,GAAG,GAAIO,EAASP,GAAG,IAIlDjC,OAAAA,EAvUSwB,CAAM9B,EAAWG,EAAaC,EAAUA,EAAUX,IAGpD,GAAA,EAEPoB,EAAUzB,QAAQyB,EAAUnB,KAAVmB,GAGlBc,SAAAA,IACFzB,IACU,GAAA,EACF2B,WAAAA,IAINb,SAAAA,EAAMuC,EAAQC,GACjBC,IAAAA,EAAM,GAEL,IAAA,IAAIlB,KAAKgB,EAAQE,EAAIlB,GAAKgB,EAAOhB,GACjC,IAAA,IAAIA,KAAKiB,EAAQC,EAAIlB,GAAKiB,EAAOjB,GAE/BkB,OAAAA,EAGAhC,SAAAA,EAAgBN,EAAMuC,EAAOF,GAChCD,IAAAA,EAAS,GACTpC,OAAAA,EAAK/B,QACA+B,EAAAA,EAAK,IACVA,EAAK/B,OAAS,EACVqC,EAAgBN,EAAKwC,MAAM,GAAID,EAAOF,EAAOrC,EAAK,KAClDuC,EACC1C,EAAMwC,EAAQD,IAEhBG,EAGAnC,SAAAA,EAAgBJ,EAAMqC,GAEtBjB,IADHA,IAAAA,EAAI,EACDA,EAAIpB,EAAK/B,QACLoE,EAAAA,EAAOrC,EAAKoB,MAEhBiB,OAAAA,EAyCAL,SAAAA,EAAO1D,GACPA,OAAAA,EAAOA,EAAKE,IAAM,KAGlBiE,SAAAA,EAAcC,GACdA,OAAAA,EAAMC,cAAcC,OAAOF,EAAMG,MAAMH,GAGvCI,SAAAA,EAAgB3D,EAASpB,EAAMwE,EAAOQ,EAAUlC,GACnD9C,GAAS,QAATA,QACG,GAAa,UAATA,EACJ,IAAA,IAAIqD,KAAKvB,EAAMkD,EAAUR,GAAQ,CAChCS,IAAAA,EAAiB,MAATT,GAA6B,MAAZA,EAAMnB,GAAa,GAAKmB,EAAMnB,GAC9C,MAATA,EAAE,GACIrD,EAAAA,GAAMkF,YAAY7B,EAAG4B,GAErBjF,EAAAA,GAAMqD,GAAK4B,MAIP,MAAZjF,EAAK,IAA0B,MAAZA,EAAK,IACnBA,EAAAA,EAAKyE,MAAM,GAEdrD,EAAQyD,OACLG,IAAUA,EAAW5D,EAAQyD,OAAO7E,IAEjC6E,EAAAA,OAAS,GAGXA,EAAAA,OAAO7E,GAAQwE,EAEnBA,EACGQ,GACKG,EAAAA,iBAAiBnF,EAAM0E,GAGzBU,EAAAA,oBAAoBpF,EAAM0E,IAGpC1E,KAAQoB,GACC,SAATpB,GACS,SAATA,GACS,cAATA,GACS,eAATA,GACS,cAATA,IACC8C,EAEO9C,EAAAA,GAAiB,MAATwE,EAAgB,GAAKA,EACnB,MAATA,IAA2B,IAAVA,GAClBa,EAAAA,aAAarF,EAAMwE,GAGhB,MAATA,IAA2B,IAAVA,GACXc,EAAAA,gBAAgBtF,GAiFrBuF,SAAAA,EAAc1C,EAAQzB,EAASb,GAC7BiF,SAAAA,IACAC,EAAAA,YAhBFC,SAAAA,EAAetE,EAASb,GAC3BN,IAAAA,EAAaM,EAAKN,WAClBA,GAAAA,EAAY,CACT,IAAA,IAAIoD,EAAI,EAAGA,EAAI9C,EAAKH,SAASF,OAAQmD,IACzBjC,EAAAA,EAAQI,WAAW6B,GAAI9C,EAAKH,SAASiD,IAGlDpD,EAAW0F,WACFA,EAAAA,UAAUvE,GAGlBA,OAAAA,EAKcsE,CAAetE,EAASb,IAGzCmD,IAAAA,EAAKnD,EAAKN,YAAcM,EAAKN,WAAW2F,SACxClC,EACCtC,EAAAA,EAASoE,GAEZA,KAwGL,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA7YezF,QAAAA,EAAAA,EA4BAW,QAAAA,IAAAA;;AC5BT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAMC,EAAQ,QAAA,MAAA,CACN,YAAA,uCACN,MAAA,GACD,KAAA,GACG,QAAA,GACI,YAAA;;ACqBR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA1BA,IAAMkF,EAAO,QAAA,KAAA,SAAA,GAAMC,OAAAA,EAAGC,OAAQ,SAACC,EAAG3C,EAAG4C,GAAMA,OAAAA,EAAEC,QAAQF,KAAO3C,KACtD8C,EAAQ,QAAA,MAAA,SAACC,GAAQ,OAAA,SAACC,GAAQA,OAAAA,EAAItF,IAAK,SAAA,GAAKuF,OAAAA,EAAEF,OAC1CG,EAAa,QAAA,WAAA,SAACC,GAAM,OAAA,SAACF,EAAEG,GAAMH,OAAAA,EAAEE,GAAKC,EAAED,IAAM,EAAKF,EAAEE,GAAKC,EAAED,GAAK,EAAI,IAEnEE,EAAe,QAAA,aAAA,SAACC,GACvBC,IAAAA,EAAc,IAAIC,KAAKF,GACzBG,EAAMF,EAAYG,UAClBC,EAAQJ,EAAYK,WAAa,EACjCC,EAAON,EAAYO,cACnBC,EAAQR,EAAYS,WACpBC,EAAUV,EAAaW,aAErBD,EAAU,KACF,EAAA,IAAMA,GAGdE,IAAAA,EAASJ,GAAS,GAAK,KAAO,KAGxBF,OAAAA,EAAQF,IAAAA,EAASF,IAAAA,EAAOM,KAD1BA,EAAU,IAAVA,EAAc,GAAKA,GACgBE,IAAAA,EAAWE,IAAAA,GAE3CC,EAAY,QAAA,UAAA,SAAU,GAC1Bf,OAAAA,EAAagB,EAAOC,QAAQC,OAAOC,WAAa,IAAMH,EAAOC,QAAQC,OAAOE,UAIxEC,EAAoB,QAAA,kBAAA,SAACC,GAC5BC,IAAAA,EAAMC,KAAKC,MAAMH,EAAO,MACxBI,EAAOF,KAAKC,MAAOH,EAAO,KAAQ,IAI5BK,MAAAA,IAFEJ,EAAM,EAAOA,EAAU,KAAA,KACtBG,EAAO,EAAOA,EAAW,KAAA,IAF3BF,KAAKI,MAAMN,EAAO,IAG7B;;ACrBK,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAXP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,cAEMO,EAAU,SAAA,GAAEC,IAAAA,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,QAC3B,OAAA,EAAA,EAAA,GAAA,KAAA,MACE,EAAA,EAAA,GAAA,KAAI,CAAA,MAAM,SACR,EAAA,EAAA,GAAA,IAAG,CAAA,QAAU,SAACC,GAAMD,OAAAA,EAAQF,KAAOC,MAK5BG,EAAY,QAAA,UAAA,SAAA,GAAGC,IAAAA,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,OACjC,OAAA,EAAA,EAAA,GAAA,QAAO,CAAA,GAAG,cACV,EAAA,EAAA,GAAA,QAAA,MACE,EAAA,EAAA,GAAA,KAAA,KAAA,WAEF,EAAA,EAAA,GAAA,QAAA,KACS/H,EAAAA,IAAK,SAAA,GACV,OAAA,EAAC,EAAA,GAAA,EAAD,CACMgI,GAAAA,EAAKP,GACFO,MAAAA,EAAKN,MACHK,QAAAA;;ACLV,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAhBP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,cAEME,EAAS,SAAA,GAAEC,IAAAA,EAAAA,EAAAA,IACf,OAAA,EAAA,EAAA,GAAA,KAAA,MACE,EAAA,EAAA,GAAA,KAAI,CAAA,MAAM,QAAYC,EAAAA,UACtB,EAAA,EAAA,GAAA,KAAI,CAAA,MAAM,QAAYvB,EAAAA,QAAQwB,UAC9B,EAAA,EAAA,GAAA,KAAA,KAASC,EAAAA,OACT,EAAA,EAAA,GAAA,KAAA,MAAuBH,EAAAA,EAAAA,mBAAAA,EAAItB,QAAQC,OAAOyB,MAAMC,SAChD,EAAA,EAAA,GAAA,KAAA,KAAS3B,EAAAA,QAAQ4B,gBACjB,EAAA,EAAA,GAAA,KAAA,KAAS5B,EAAAA,QAAQ6B,QAAU,MAAQ,KACnC,EAAA,EAAA,GAAA,KAAI,CAAA,MAAM,SAAqBP,EAAAA,EAAAA,cAAAA,EAAItB,QAAQC,OAAOC,WAAlD,IAAmEF,EAAAA,QAAQC,OAAOE,WAClF,EAAA,EAAA,GAAA,KAAI,CAAA,MAAM,SAAqBmB,EAAAA,EAAAA,cAAAA,EAAIpB,cAI1B4B,EAAY,QAAA,UAAA,SAAA,GAAGtH,IAAAA,EAAAA,EAAAA,KAC1B,OAAA,EAAA,EAAA,GAAA,QAAO,CAAA,GAAG,cACR,EAAA,EAAA,GAAA,QAAA,MACE,EAAA,EAAA,GAAA,KAAA,KAAA,SACA,EAAA,EAAA,GAAA,KAAA,KAAA,SACA,EAAA,EAAA,GAAA,KAAA,KAAA,SACA,EAAA,EAAA,GAAA,KAAA,KAAA,SACA,EAAA,EAAA,GAAA,KAAA,KAAA,kBACA,EAAA,EAAA,GAAA,KAAA,KAAA,aACA,EAAA,EAAA,GAAA,KAAA,KAAA,mBACA,EAAA,EAAA,GAAA,KAAA,KAAA,sBAEF,EAAA,EAAA,GAAA,QAAA,KACQuH,EAAAA,MAAM,EAAW,EAAA,YAAA,cAAe3I,IAAI,SAAA,GACxC,OAAA,EAAC,EAAA,GAAA,EAAO,CAAA,IAAKkI;;ACbd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAjBP,IAAA,EAAA,QAAA,YAEMU,EAAY,SAAA,GAAEC,IAAAA,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MACrC,OAAA,EAAA,EAAA,GAAA,QAAO,CAAA,IAAKH,EACA,QAAA,SAAA,GAAKC,OAAAA,EAAKC,KADtB,EAAA,MAIE,EAAA,EAAA,GAAA,QAAA,CACQF,KAAAA,EACD,KAAA,OACC,MAAA,aACCE,MAAAA,EACG,QAAA,SAAA,GAAKD,OAAAA,EAAKlB,EAAEtE,OAAOG,YAKtBwF,EAAc,QAAA,YAAA,SAAA,GAAErJ,IAAAA,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,QAClC,OAAA,EAAA,EAAA,GAAA,MAAK,CAAA,MAAM,WACR,EAAA,EAAA,GAAA,EAAD,CACQ,MAAA,cACAA,KAAAA,EAAQqJ,YACRtJ,KAAAA,EAAMuJ,YACN,MAAA,mBAEP,EAAA,EAAA,GAAA,EAAD,CACQ,MAAA,UACAtJ,KAAAA,EAAQuJ,YACRxJ,KAAAA,EAAMoI,KAAKP,GACX,MAAA;;AC3BL,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAFP,IAAA,EAAA,QAAA,YAEa4B,EAAe,QAAA,aAAA,SAAA,GAAErB,EAAAA,KAC9B,OAAA,EAAA,EAAA,GAAA,eAAc,CAAA,cAAc,GAAG,aAAa,GAAG,gBAAgB,KAChD,EAAA,EAAA,GAAA,cAAA,CAAA,KAAK,qBAAqB,MAAM,MAChC,EAAA,EAAA,GAAA,cAAA,CAAA,KAAK,oBAAoB,MAAM,MAC/B,EAAA,EAAA,GAAA,cAAA,CAAA,KAAK,QAAQ,MAAM;;ACsB3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA5BP,IAAMsB,EAAY,SAAA,GAAQ,OAAA,SAAA,GAAMC,OAAAA,EAAGC,KAAM,SAAA,GAAKlH,OAAAA,EAAE+F,OAASA,MACnDoB,EAAiB,SAAA,GAAMF,OAAAA,EAAGC,KAAK,SAAA,GAAMlH,OAAsB,IAAtBA,EAAEsE,QAAQ6B,WAC/CiB,EAAgB,SAAA,GAAMD,OAAAA,EAAeF,IAAOD,EAAU,iBAAVA,CAA4BC,IAEjEI,EAAY,QAAA,UAAA,SAAA,GAAMF,OAAAA,EAAeF,GAAM,EAAI,GAE3CK,EAAiB,QAAA,eAAA,SAAA,GAC5BL,OAAAA,EAAGM,OAAO,SAACC,EAAGC,GAAOD,OAAAA,EAAIC,EAAEnD,QAAQC,OAAOyB,MAAMC,OAAQ,GAAGyB,QAAQ,IAGxDC,EAAc,QAAA,YAAA,SAAA,GAAQ,OAAA,SAAM,GACnCF,IAAAA,EAAIT,EAAUjB,EAAViB,CAAgBC,GACjBQ,OAAAA,EAAIA,EAAEnD,QAAQC,OAAOyB,MAAMC,MAAQ,IAG/B2B,EAAsB,QAAA,oBAAA,SAAM,GACjCC,IAAAA,EAAU,QAAQC,MAAM,IACxBC,EAAKX,EAAcH,GACrBlI,EAAS,CAACiJ,MAAO,GAAI7B,QAAS,IAK3BpH,OAJJuF,EAAAA,QAAQ2D,KAAKC,UAAUC,QAAQ,SAACV,EAAEzH,GAChCyH,EAAEW,cAAgBL,EAAGzD,QAAQ4B,gBAAwB8B,EAAAA,MAAQH,EAAQ7H,IACvD,YAAdyH,EAAEhG,KAAK,KAA2B0E,EAAAA,QAAU0B,EAAQ7H,MAElDjB,GAGIsJ,EAAY,QAAA,UAAA,SAAA,GAAMpB,OAAAA,EAAGC,KAAK,SAAA,GAAKlH,MAAW,kBAAXA,EAAE+F,OAA4B,EAAI,GACjEuC,EAAY,QAAA,UAAA,SAAA,GAAMC,OAAAA,EAAQtB,GAAM,EAAI,GACpCsB,EAAU,QAAA,QAAA,SAAM,GACvBC,IAAAA,EAAQxB,EAAU,gBAAVA,CAA2BC,GACnCwB,EAASzB,EAAU,iBAAVA,CAA4BC,GACrCyB,EAAMrB,EAAUJ,GACbuB,OAAAA,GAAUE,GAAQD,EAAa,EAAJ;;ACpB7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,yBAAA,EAZP,IAAA,EAAA,QAAA,iBAEME,EAAgB,SAAO,GACpB3F,OAAAA,EAAIuE,OAAO,SAACqB,EAAIC,GACjBlG,IAAAA,EAAIkG,EAAEvE,QAAQwB,QACdgD,EAAKF,EAAG1B,KAAK,SAACO,GAAMA,OAAAA,GAAKA,EAAE,GAAGnD,QAAQwB,UAAYnD,IAG/CiG,OAFHE,EAAS7L,EAAAA,KAAK4L,GACR5L,EAAAA,KAAK,CAAC4L,IACTD,GACN,KAGQG,EAAsB,QAAA,oBAAA,SAAA,GACjCJ,OAAAA,EAAeK,EAAI3C,MAAK,EAAW,EAAA,YAAA;;ACD9B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,QAAA,cAAA,QAAA,gBAAA,QAAA,mBAAA,EAZP,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,YAEM4C,EAAQ,IAEDC,EAAgB,QAAA,cAAA,SAAA,GAC3B,OAAA,EAAoBjC,EAAAA,qBAAAA,GAAIM,OAAO,SAAC4B,EAAKnJ,GAAOmJ,OAAAA,GAAM,EAAUnJ,EAAAA,WAAAA,IAAK,IAEtDoJ,EAAkB,QAAA,gBAAA,SAAA,GAC7B,OAAA,EAAoBnC,EAAAA,qBAAAA,GAAIM,OAAO,SAAC4B,EAAKnJ,GAAOmJ,OAAAA,IAAO,EAAUnJ,EAAAA,WAAAA,GAAK,EAAI,IAAK,IAEhEqJ,EAAgB,QAAA,cAAA,SAAA,GAAMJ,OAAAA,EAAQC,EAAcjC,GAAMmC,EAAgBnC,IAClEqC,EAAqB,QAAA,mBAAA,SAAA,GAAM,OAAqB,IAApBJ,EAAcjC,GAAYgC,GAAOvB,QAAQ;;ACP3E,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EALP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,gBAIa6B,EAAa,QAAA,WAAA,SAAA,GAAEzK,IAAAA,EAAAA,EAAAA,KAC1B,OAAA,EAAA,EAAA,GAAA,aAAA,MACY,EAAA,EAAA,GAAA,WAAA,CAAA,KAAK,eACP,MAAA,MACQ,cAAA,EAAcA,EAAAA,eAAAA,GACZ,gBAAA,EAAgBA,EAAAA,iBAAAA,GAClB,cAAA,EAAcA,EAAAA,eAAAA,GAChB,YAAA;;AC8BX,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EA1CP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,YACA,EAAA,QAAA,eAaM0K,EAAY,SAAA,GAAEvB,IAAAA,EAAAA,EAAAA,KAClB,OAAA,EAAA,EAAA,GAAA,YAAA,CACMA,GAAAA,EAAK,GAAG3D,QAAQwB,QACdmC,KAAAA,EAAK,GAAG3D,QAAQ2D,KAAKwB,YAAY,GAC/B,QAAA,EAAUxB,EAAAA,WAAAA,GACR,UAAA,EAAeA,EAAAA,gBAAAA,GACH,sBAAA,EAAY,EAAA,aAAA,gBAAZ,CAA6BA,GAChC,mBAAA,EAAY,EAAA,aAAA,iBAAZ,CAA8BA,GAC1B,uBAAA,EAAY,EAAA,aAAA,iBAAZ,CAA8BA,GAC9C,OAAA,yBACA,OAAA,IACI,WAAA,EAAUA,EAAAA,WAAAA,GACZ,SAAA,EAAUA,EAAAA,WAAAA,KAEnB,EAAA,EAAA,GAAA,OAAA,CACY,UAAA,EAAoBA,EAAAA,qBAAAA,GAAMD,MACnB,iBAAA,EAAoBC,EAAAA,qBAAAA,GAAM9B,QACpC,OAAA,EAAU8B,EAAAA,WAAAA,GACR,SAAA,IACA,SAAA,IACA,SAAA,IACC,UAAA,EAAUA,EAAAA,WAAAA,GACX,SAAA,EAAQA,EAAAA,SAAAA,GACV,OAAA,QAIAyB,EAAQ,QAAA,MAAA,SAAA,GAAEC,IAAAA,EAAAA,EAAAA,QACrB,OAAA,EAAoBA,EAAAA,qBAAAA,GACjBjM,IAAK,SAAA,GAAO,OAAA,EAAC,EAAA,GAAA,EAAU,CAAA,KAAMkM;;ACX3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAjCP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,WACA,EAAA,QAAA,iBACA,EAAA,QAAA,eACA,EAAA,QAAA,gBAMMC,EAAU,SAAA,GAAE/K,IAAAA,EAAAA,EAAAA,KAChB,OAAA,EAAA,EAAA,GAAA,UAAS,CAAA,KAAK,YACN,MAAA,MACQ,cAAA,EAAcA,EAAAA,eAAAA,GACZ,gBAAA,EAAgBA,EAAAA,iBAAAA,GAClB,cAAA,EAAcA,EAAAA,eAAAA,GAChB,YAAA,IACG,eAAA,EAAUA,EAAAA,WAAAA,EAAK,IACjB,aAAA,EAAUA,EAAAA,WAAAA,EAAKA,EAAKjC,OAAS,IAChC,UAAA,EAAeiC,EAAAA,gBAAAA,KAEzB,EAAA,EAAA,GAAA,QAAA,CACc,YAAA,EAAcA,EAAAA,eAAAA,GACZ,cAAA,EAAmBA,EAAAA,oBAAAA,GACnB,cAAA,IACL,SAAA,IACA,SAAA,MACA,SAAA,OAEV,EAAA,EAAA,GAAA,EAAD,MAAO,CAAA,QAASA,MAIPgL,EAAW,QAAA,SAAA,SAAA,GAAEhL,IAAAA,EAAAA,EAAAA,KACxB,OAAA,EAAA,EAAA,GAAA,WAAA,MACG,EAAA,EAAA,GAAA,EAAQ,CAAA,KAAMA;;ACzBZ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAVP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,gBACA,EAAA,QAAA,cACA,EAAA,QAAA,iBACA,EAAA,QAAA,eACA,EAAA,QAAA,gBAKaiL,EAAO,QAAA,KAAA,SAAA,GAAEjL,IAAAA,EAAAA,EAAAA,KAAM4G,EAAAA,EAAAA,KAC1B,OAAA,EAAA,EAAA,GAAA,OAAA,CACoBA,iBAAAA,EAAKN,MAAQ,OACf,gBAAA,MACX,KAAA,eACQ,aAAA,WACC,cAAA,oCACC,eAAA,EAAUtG,EAAAA,WAAAA,EAAK,IACjB,aAAA,EAAUA,EAAAA,WAAAA,EAAKA,EAAKjC,OAAS,IAChC,UAAA,EAAeiC,EAAAA,gBAAAA,GACZ,aAAA,IACP,MAAA,MACQ,cAAA,EAAcA,EAAAA,eAAAA,GACZ,gBAAA,EAAgBA,EAAAA,iBAAAA,GAClB,cAAA,EAAcA,EAAAA,eAAAA,GAChB,YAAA,IACC,aAAA,GACG,gBAAA,KAEhB,EAAA,EAAA,GAAA,QAAA,CACc,YAAA,EAAcA,EAAAA,eAAAA,GACZ,cAAA,EAAmBA,EAAAA,oBAAAA,GACnB,cAAA,IACL,SAAA,IACA,SAAA,MACA,SAAA,OAEV,EAAA,EAAA,GAAA,EAAD,SAAU,CAAA,KAAMA,KACf,EAAA,EAAA,GAAA,EAAD,WAAY,CAAA,KAAMA;;ACzBf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAbP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,kBACA,EAAA,QAAA,UACA,EAAA,QAAA,YACA,EAAA,QAAA,eACA,EAAA,QAAA,iBACA,EAAA,QAAA,gBAOakL,EAAS,QAAA,OAAA,SAAA,GAAE1M,IAAAA,EAAAA,EAAAA,MACxB,OAAA,EAAA,EAAA,GAAA,MAAK,CAAA,GAAG,WACN,EAAA,EAAA,GAAA,KAAI,CAAA,MAAM,SACR,EAAA,EAAA,GAAA,KAAA,KAAA,YAAoB2M,EAAAA,YAAYpN,SAChC,EAAA,EAAA,GAAA,KAAA,KAAA,kBAAuCS,EAAAA,EAAAA,qBAAAA,EAAM2M,aAAapN,SAC1D,EAAA,EAAA,GAAA,KAAA,KAAA,aAA4BS,EAAAA,EAAAA,eAAAA,EAAM2M,eAClC,EAAA,EAAA,GAAA,KAAA,KAAA,WAA4B3M,EAAAA,EAAAA,iBAAAA,EAAM2M,eAClC,EAAA,EAAA,GAAA,KAAA,KAAA,aAA4B3M,EAAAA,EAAAA,eAAAA,EAAM2M,eAClC,EAAA,EAAA,GAAA,KAAA,KAAA,WAA+B3M,EAAAA,EAAAA,oBAAAA,EAAM2M,eACrC,EAAA,EAAA,GAAA,KAAA,KAAA,cAAiC,EAAA,EAAA,oBAAA,EAAe3M,EAAAA,gBAAAA,EAAM2M,iBAExD,EAAA,EAAA,GAAA,SAAA,MAEA,EAAA,EAAA,GAAA,kBAAiB,CAAA,MAAM,uDAAuD,QAAQ,QACnF,EAAA,EAAA,GAAA,EAAD,aAAc,CAAA,KAAM3M,EAAMoI,OAClBuE,EAAAA,YAAY,IAAM,EAAC,EAAA,GAAA,EAAD,KAAM,CAAA,KAAM3M,EAAM2M,YAAa,KAAM3M,EAAMoI,OAAY;;ACP9E,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EArBP,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,WACA,EAAA,QAAA,0BACA,EAAA,QAAA,0BACA,EAAA,QAAA,uBACA,EAAA,QAAA,8BAEMwE,EAAU,SAAA,GACd,OAAA,EAAA,EAAA,GAAA,SAAA,CACM,MAAA,cACI,QAAA,SAAA,GAAK3M,OAAAA,EAAQ4M,cAFvB,gBAMIC,EAAgB,SAAA,GACpB,OAAA,EAAA,EAAA,GAAA,KAAA,MACE,EAAA,EAAA,GAAA,KAAA,KAAWjF,EAAAA,IACJC,EAAAA,QAIE5H,EAAO,QAAA,KAAA,SAACF,EAAOC,GAC1B,OAAA,EAAA,EAAA,GAAA,UAAA,MACE,EAAA,EAAA,GAAA,KAAA,KAAA,uBACC,EAAA,EAAA,GAAA,EAAD,YAAa,CAAA,MAAOD,EAAO,QAASC,KAFtC,EAAA,EAAA,GAAA,KAAA,MAIUmI,EAAAA,KAAKP,GAAKiF,EAAc9M,EAAMoI,MAAQwE,EAAQ3M,IACrD,EAAA,EAAA,GAAA,EAAD,OAAQ,CAAA,MAAOD,KACf,EAAA,EAAA,GAAA,MAAK,CAAA,MAAM,WACR,EAAA,EAAA,GAAA,EAAD,UAAW,CAAA,MAAOA,EAAMkI,MAAO,OAAQjI,EAAQuJ,eAC9C,EAAA,EAAA,GAAA,EAAD,UAAW,CAAA,KAAMxJ,EAAM2M;;AC9B7B,aAEA,IAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,GAkEA,SAAA,EAAA,GACA,MAAA,mBAAA,EAAA,IAAA,EAGA,SAAA,IACA,IAAA,EAAA,GAKA,OAJA,EAAA,QAAA,IAAA,QAAA,SAAA,EAAA,GACA,EAAA,QAAA,EACA,EAAA,OAAA,IAEA,EAxEA,OAAA,QAAA,SAAA,GACA,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAEA,OAAA,EACA,OAAA,EACA,OAAA,EACA,EAAA,GACA,OAAA,WACA,IA4BA,EA5BA,EAAA,EAAA,GACA,GAAA,IAAA,MAAA,UAEA,GAAA,GAAA,EAAA,EAAA,EAEA,EAAA,EAEA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,UAAA,GAGA,GAAA,GAAA,EAAA,QACA,OAAA,EAAA,WAAA,QAAA,QAAA,EAAA,KAAA,KAAA,CAAA,KAAA,KAAA,SAAA,GACA,OAAA,EAAA,KACA,QAAA,QAAA,EAAA,KAAA,MAAA,EAAA,CAAA,MAAA,OAAA,KAYA,GATA,EACA,aAAA,GAEA,EAAA,IAGA,EAAA,KAAA,GACA,EAAA,WAkBA,WACA,IAAA,EAAA,EACA,aAAA,GAEA,QAAA,QAAA,EAAA,WAAA,EAAA,KAAA,KAAA,GAAA,EAAA,MAAA,KAAA,EAAA,EAAA,OAAA,KAAA,KAAA,EAAA,QAAA,EAAA,QAEA,EAAA,GACA,EAAA,MAzBA,KAAA,MAAA,GAEA,EAAA,WAAA,CACA,IAAA,GACA,EAAA,EAAA,OAAA,EACA,CACA,EAAA,EAAA,QAAA,KAAA,SAAA,GACA,OAAA,EAAA,OAKA,GAAA,iBAAA,IAAA,EAAA,YAAA,EAAA,IAAA,OAAA,EAAA,EAGA,OAAA,EAAA;;ACtDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAMI,EAAW,QAAA,SAAA;;ACgBjB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,QAAA,iBAAA,EAhBP,IAAA,EAAA,QAAA,oBAgBO,EAAA,EAAA,GAfP,EAAA,QAAA,SAeO,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAbP,IAAMC,EAAgB,SAACzD,EAAahB,GAClC0E,OAAAA,MAASF,EAAT,SAAoCxD,mBAAAA,EAAuBhB,YAAAA,GACxD5G,KAAK,SAAA,GAAOuL,OAAAA,EAAIC,UACfC,GAAc,EAASJ,EAAAA,SAAAA,EAAe,KAE/B1D,EAAc,QAAA,YAAA,SAAA,GAAEC,IAAAA,EAAAA,EAAAA,YAAahB,EAAAA,EAAAA,QAAa,OAAA,SAACvI,EAAOC,GAKtD,OAJCoN,QAAAA,IAAI,cAAe9D,EAAahB,GAC5BgB,EAAAA,EAAahB,GACtB5G,KAAK1B,EAAQqN,aACb3L,KAAK1B,EAAQsN,WACT,CAAEhE,YAAF,EAAeoD,YAAa,MAGxBW,EAAc,QAAA,YAAA,SAAA,GACzB,MAAA,CAAEE,QAAF,EAAWb,YAAaa,EAAQC;;ACD3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,QAAA,UAAA,QAAA,eAAA,EAhBP,IAAA,EAAA,QAAA,oBAgBO,EAAA,EAAA,GAfP,EAAA,QAAA,SAeO,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAbP,IAAMC,EAAc,SAACzN,GACnBgN,OAAAA,MAASF,EAAT,SACGpL,UAAAA,KAAK,SAAA,GAAOuL,OAAAA,EAAIC,UAERN,EAAY,QAAA,UAAA,WAAM,OAAA,SAAC7M,EAAOC,GAI9B,OAHKA,EAAAA,GACT0B,KAAK1B,EAAQ0N,WACbhM,KAAK1B,EAAQsN,WACT,KAGII,EAAY,QAAA,UAAA,SAACzF,GAAW,MAAA,CAAEA,MAAF,IAExBsB,EAAc,QAAA,YAAA,SAAA,GAAW,OAAA,SAACxJ,EAAOC,GACpCoN,QAAAA,IAAI,UAAW9E,GACfe,EAAAA,YAAY,CAACC,YAAavJ,EAAMuJ,YAAahB,QAAjC,IAChBqF,IAAAA,EAAK5N,EAAMkI,MAAM9C,OAAQ,SAAA,GAAKyI,OAAAA,EAAEhG,IAAMU,IAAU,GAC7C,MAAA,CAAEH,KAAM,CAAEP,GAAI+F,EAAG/F,GAAIC,MAAO8F,EAAG9F;;ACjBjC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHP,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,WAEa7H,EAAU,QAAA,QAAA,CACV,UAAA,WAAM,OAAA,SAAS,GACjB6N,OAAAA,QAAU9N,EACTqN,QAAAA,IAAI,SAAUrN,KAHH,YAAA,EAAA,YAAA,YAAA,EAAA,YAAA,UAAA,EAAA,UAAA,UAAA,EAAA,UASrBwJ,YAAAA,EAAAA;;;;ACNF,aANA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,WACA,EAAA,QAAA,qBACA,QAAA,eAEA,EAAIxJ,EAAAA,KAAAA,EAAJ,MAAWC,EAAX,QAAoBC,EAApB,KAA0BoC,SAASyL","file":"app.e10b1ddb.map","sourceRoot":"..","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        var style = value == null || value[i] == null ? \"\" : value[i]\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style)\n        } else {\n          element[name][i] = style\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","export const state = {\n  activity_id: '499a63ab-971f-4edd-9c7d-a18b21227f7e',\n  users: [],\n  user: {},\n  lrsdata: [],\n  displaydata: [],\n}","export const uniq = ar => ar.filter( (v, i, s) => s.indexOf(v) === i )\nexport const pluck = (ele) => (arr) => arr.map( a => a[ele] )\nexport const sortByProp = (p) => (a,b) => a[p] < b[p] ? -1 : (a[p] > b[p] ? 1 : 0)\n\nexport const display_time = (stamp) => {\n  let currentDate = new Date(stamp),\n    day = currentDate.getDate(),\n    month = currentDate.getMonth() + 1,\n    year = currentDate.getFullYear(),\n    hours = currentDate.getHours(),\n    minutes = currentDate .getMinutes();\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  let suffix = hours >= 12 ? \"PM\" : \"AM\";\n  // hours = suffix === 'PM' ? hours - 12 : hours;\n  hours = hours === 0 ? 12 : hours;\n  return `${year}-${month}-${day} ${hours}:${minutes} ${suffix}`\n}\nexport const datestamp = record => {\n  return display_time(record.context.timing.timestamp) + ' ' + record.context.timing.timezone;\n}\n\n\nexport const time_from_seconds = (time) => {\n  let hrs = Math.floor(time / 3600)\n  let mins = Math.floor((time % 3600) / 60)\n  let secs = Math.round(time % 60)\n  let hrstr = hrs > 0 ? `${hrs}h ` : ''\n  let minstr = mins > 0 ? `${mins}m ` : ''\n  return `${hrstr}${minstr}${secs}s`;\n}","import { h } from 'hyperapp'\nimport { uniq, pluck } from '../lib/lib'\n\nconst UserRow = ({id, email, clickFn}) => (\n  <tr>\n    <td class='tiny'>\n      <a onclick={ (e) => clickFn(id) }>{email}</a>\n      </td>\n  </tr>\n)\n\nexport const UserTable = ({ users, select }) => (\n  <table id='usertable'>\n  <thead>\n    <th>Users</th>\n  </thead>\n  <tbody>\n    {users.map( user => (\n      <UserRow\n        id={user.id}\n        email={user.email}\n        clickFn={select}\n      ></UserRow>\n    ))}\n  </tbody>\n  </table>\n)","import { h } from 'hyperapp'\nimport { display_time, time_from_seconds, sortByProp } from '../lib/lib'\n\nconst LrsRow = ({row}) => (\n  <tr>\n    <td class='tiny'>{row.user_id}</td>\n    <td class='tiny'>{row.context.item_id}</td>\n    <td>{row.verb}</td>\n    <td>{time_from_seconds(row.context.timing.timer.total)}</td>\n    <td>{row.context.chosen_answer}</td>\n    <td>{row.context.correct ? \"Yes\" : ''}</td>\n    <td class='tiny'>{display_time(row.context.timing.timestamp)} {row.context.timing.timezone}</td>\n    <td class='tiny'>{display_time(row.timestamp)}</td>\n  </tr>\n)\n\nexport const DataTable = ({ data }) => (\n  <table id='datatable'>\n    <thead>\n      <th>User</th>\n      <th>Item</th>\n      <th>Verb</th>\n      <th>Time</th>\n      <th>Chosen Answer</th>\n      <th>Correct?</th>\n      <th>User Timestamp</th>\n      <th>Server Timestamp</th>\n    </thead>\n    <tbody>\n      {data.sort( sortByProp('timestamp') ).map(row => (\n        <LrsRow row={row} />\n      ))}\n    </tbody>\n  </table>\n)\n","import { h } from 'hyperapp'\n\nconst TextInput = ({field, func, init, label}) => (\n  <label for={field}\n    onclick={ e => func(init) }\n  >\n    {label}:&nbsp;\n    <input\n      name={field}\n      type='text'\n      class='input_text'\n      value={init}\n      oninput={ e => func(e.target.value) }\n    />\n  </label>\n)\n\nexport const InputFields = ({state, actions}) => (\n  <div class='inputs'>\n    <TextInput\n      field='activity_id'\n      func={actions.get_records}\n      init={state.activity_id}\n      label=\"Activity UUID\"\n    />\n    <TextInput\n      field='user_id'\n      func={actions.user_select}\n      init={state.user.id}\n      label=\"User UUID\"\n    />\n  </div>\n)","import { h } from 'hyperapp'\n\nexport const Demographics = ({user}) => (\n<demographics appointmentid=\"\" functioncode=\"\" workstationname=\"\">\n  <demographic name=\"CandidateFirstName\" value=\"\" />\n  <demographic name=\"CandidateLastName\" value=\"\" />\n  <demographic name=\"email\" value=\"{user.email}\" />\n</demographics>\n)","const getByVerb = verb => rs => rs.find( i => i.verb === verb )\nconst correctAttempt = rs => rs.find(i => (i.context.correct === true))\nconst gradedAttempt = rs => correctAttempt(rs) || getByVerb('second_attempt')(rs)\n\nexport const iscorrect = rs => correctAttempt(rs) ? 1 : 0\n\nexport const total_duration = rs => (\n  rs.reduce((t, r) => (t + r.context.timing.timer.total), 0).toFixed(3)\n)\n\nexport const duration_of = verb => rs => {\n  let r = getByVerb(verb)(rs)\n  return r ? r.context.timing.timer.total : 0\n}\n\nexport const correctAnswerLetter = rs => {\n  const letters = \"ABCDE\".split('')\n  const ga = gradedAttempt(rs)\n  let result = {guess: '', correct: ''}\n  ga.context.item.responses.forEach((r,i) => {\n    if(r.displayText === ga.context.chosen_answer) { result.guess = letters[i] }\n    if(r.type[0] === 'correct') { result.correct = letters[i] }\n  })\n  return result\n}\n\nexport const attempted = rs => rs.find(i => i.verb === 'first_attempt') ? 1 : 0\nexport const completed = rs => skipped(rs) ? 0 : 1\nexport const skipped = rs => {\n  let first = getByVerb('first_attempt')(rs)\n  let second = getByVerb('second_attempt')(rs)\n  let cor = iscorrect(rs)\n  return first && !cor && !second ? 1 : 0\n}","import { sortByProp } from '../../lib/lib'\n\nconst groupByItemId = arr => {\n  return arr.reduce((rv, x) => {\n    let v = x.context.item_id;\n    let el = rv.find((r) => r && r[0].context.item_id === v);\n    if (el) { el.push(x); }\n    else { rv.push([x]); }\n    return rv;\n  }, []);\n};\n\nexport const sortAndGroupRecords = lrs => (\n  groupByItemId( lrs.sort(sortByProp('timestamp')) )\n)","import { iscorrect } from \"./calc_item\";\nimport { sortAndGroupRecords } from './counts'\n\nconst ITEMS = 175\n\nexport const count_correct = rs => (\n  sortAndGroupRecords(rs).reduce((tot, i) => (tot + iscorrect(i)), 0)\n)\nexport const count_incorrect = rs => (\n  sortAndGroupRecords(rs).reduce((tot, i) => (tot + (iscorrect(i) ? 0 : 1)), 0)\n)\nexport const count_skipped = rs => ITEMS - count_correct(rs) - count_incorrect(rs)\nexport const percentage_correct = rs => (count_correct(rs) * 100 / ITEMS).toFixed(2)","import  { h } from 'hyperapp'\nimport  { count_correct,\n          count_incorrect,\n          count_skipped } from './calc_score'\n\nexport const Categories = ({data}) => (\n  <categories>\n    <category name=\"hand_surgery\"\n      count=\"175\"\n      countcorrect={count_correct(data)}\n      countincorrect={count_incorrect(data)}\n      countskipped={count_skipped(data)}\n      countmarked=\"0\"\n    >\n    </category>\n  </categories>\n)","import { h } from 'hyperapp'\nimport { sortAndGroupRecords } from './counts'\nimport  { iscorrect,\n          total_duration,\n          duration_of,\n          attempted,\n          correctAnswerLetter,\n          completed,\n          skipped\n        } from './calc_item'\n\n// TODO: Need some extra data from the Sequence\n// which will give me items that were SEEN...\n// but may not have attempts and LRS records\n\nconst ItemGroup = ({item}) => (\n  <itemgroup\n    id={item[0].context.item_id}\n    name={item[0].context.item.external_id[0]}\n    scored={iscorrect(item)}\n    duration={total_duration(item)}\n    durationFirstAttempt={duration_of('first_attempt')(item)}\n    durationRationale={duration_of('rationale_time')(item)}\n    durationSecondAttempt={duration_of('second_attempt')(item)}\n    progid=\"UTDP.MultiChoiceItem.1\"\n    weight=\"1\"\n    presented={attempted(item)}\n    visited={attempted(item)}\n    >\n    <item\n      response={correctAnswerLetter(item).guess}\n      correctresponse={correctAnswerLetter(item).correct}\n      score={iscorrect(item)}\n      scoremin=\"0\"\n      scoremax=\"1\"\n      scorenom=\"0\"\n      complete={completed(item)}\n      skipped={skipped(item)}\n      marked=\"0\" />\n  </itemgroup>\n)\n\nexport const Items = ({records}) => (\n  sortAndGroupRecords(records)\n    .map( it => (<ItemGroup item={it} />))\n)","import  { h } from 'hyperapp'\nimport  { Items } from './items'\nimport  { datestamp } from '../../lib/lib'\nimport  { total_duration } from './calc_item'\nimport  { count_correct,\n          count_incorrect,\n          count_skipped,\n          percentage_correct } from './calc_score'\n\n\nconst Section = ({data}) => (\n  <section name=\"hand_exam\"\n    count=\"175\"\n    countcorrect={count_correct(data)}\n    countincorrect={count_incorrect(data)}\n    countskipped={count_skipped(data)}\n    countmarked=\"0\"\n    startdatetime={datestamp(data[0])}\n    enddatetime={datestamp(data[data.length - 1])}\n    duration={total_duration(data)}\n    >\n    <score\n      scorevalue={count_correct(data)}\n      scoredisplay={percentage_correct(data)}\n      passindicator=\"p\"\n      scoremin=\"0\"\n      scoremax=\"175\"\n      scorecut=\"0\"\n      />\n    <Items records={data} />\n  </section>\n)\n\nexport const Sections = ({data}) => (\n  <sections>\n    <Section data={data} />\n  </sections>\n)","import { h } from 'hyperapp'\nimport { Categories } from './categories'\nimport { Sections } from './sections'\nimport { datestamp } from '../../lib/lib'\nimport  { total_duration } from './calc_item'\nimport  { count_correct,\n          count_incorrect,\n          count_skipped,\n          percentage_correct } from './calc_score'\n\nexport const Exam = ({data, user}) => (\n  <exam\n    resourcefilename={user.email + '.xml'}\n    resourceversion=\"1.0\"\n    name=\"MOC-HANDEXAM\"\n    examformname=\"HANDEXAM\"\n    driverversion=\"9.1.1 Build #0 (UTD 9.1 CORE (A))\"\n    startdatetime={datestamp(data[0])}\n    enddatetime={datestamp(data[data.length - 1])}\n    duration={total_duration(data)}\n    restartcount=\"0\"\n    count=\"175\"\n    countcorrect={count_correct(data)}\n    countincorrect={count_incorrect(data)}\n    countskipped={count_skipped(data)}\n    countmarked=\"0\"\n    functioncode=\"\"\n    workstationname=\"\"\n    >\n    <score\n      scorevalue={count_correct(data)}\n      scoredisplay={percentage_correct(data)}\n      passindicator=\"p\"\n      scoremin=\"0\"\n      scoremax=\"175\"\n      scorecut=\"0\"\n      />\n    <Sections data={data} />\n    <Categories data={data} />\n  </exam>\n)","import { h } from 'hyperapp'\nimport { Demographics } from './demographics'\nimport { Exam } from './exam'\nimport { sortAndGroupRecords } from './counts'\nimport  { total_duration } from './calc_item'\nimport { time_from_seconds } from '../../lib/lib'\nimport  { count_correct,\n          count_skipped,\n          count_incorrect,\n          percentage_correct } from './calc_score'\n\n\n\nexport const Report = ({state}) => (\n<div id='report'>\n  <ul class='data'>\n    <li>Records: {state.displaydata.length}</li>\n    <li>Unique Items: {sortAndGroupRecords(state.displaydata).length}</li>\n    <li>Correct: {count_correct(state.displaydata)}</li>\n    <li>Wrong: {count_incorrect(state.displaydata)}</li>\n    <li>Skipped: {count_skipped(state.displaydata)}</li>\n    <li>Score: {percentage_correct(state.displaydata)}</li>\n    <li>Duration: {time_from_seconds(total_duration(state.displaydata))}</li>\n  </ul>\n  <script>\n  {/* <?xml version=\"1.0\" encoding=\"UTF-8\"?> */}\n  <simpleXMLResult xmlns=\"http://sdk.prometric.com/schemas/SimpleXMLResults1_3\" version=\"1.3\">\n    <Demographics user={state.user} />\n    { state.displaydata[0] ? (<Exam data={state.displaydata} user={state.user} />) : null }\n  </simpleXMLResult>\n  </script>\n</div>\n)","import { h } from 'hyperapp';\nimport { state } from './state';\nimport { UserTable } from './components/usertable'\nimport { DataTable } from './components/datatable'\nimport { InputFields } from './components/inputs'\nimport { Report } from './components/report/report'\n\nconst no_user = actions => (\n  <button\n  class=\"fetch_users\"\n  onclick={ e => actions.get_users() }\n  >Fetch Users</button>\n)\n\nconst selected_user = user => (\n  <h3>\n    <em>{ user.id }</em>\n    { user.email }\n  </h3>\n)\n\nexport const view = (state, actions) => (\n  <section>\n    <h2>Search Propel2 LRS</h2>\n    <InputFields state={state} actions={actions} />\n    <br />\n    { state.user.id ? selected_user(state.user) : no_user(actions) }\n    <Report state={state}></Report>\n    <div class='tables'>\n      <UserTable users={state.users} select={actions.user_select} />\n      <DataTable data={state.displaydata}></DataTable>\n    </div>\n  </section>\n);","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* global setTimeout, clearTimeout */\n\nmodule.exports = function debounce(fn) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var lastCallAt = void 0;\n  var deferred = void 0;\n  var timer = void 0;\n  var pendingArgs = [];\n  return function debounced() {\n    var currentWait = getWait(wait);\n    var currentTime = new Date().getTime();\n\n    var isCold = !lastCallAt || currentTime - lastCallAt > currentWait;\n\n    lastCallAt = currentTime;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (isCold && options.leading) {\n      return options.accumulate ? Promise.resolve(fn.call(this, [args])).then(function (result) {\n        return result[0];\n      }) : Promise.resolve(fn.call.apply(fn, [this].concat(args)));\n    }\n\n    if (deferred) {\n      clearTimeout(timer);\n    } else {\n      deferred = defer();\n    }\n\n    pendingArgs.push(args);\n    timer = setTimeout(flush.bind(this), currentWait);\n\n    if (options.accumulate) {\n      var _ret = function () {\n        var argsIndex = pendingArgs.length - 1;\n        return {\n          v: deferred.promise.then(function (results) {\n            return results[argsIndex];\n          })\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return deferred.promise;\n  };\n\n  function flush() {\n    var thisDeferred = deferred;\n    clearTimeout(timer);\n\n    Promise.resolve(options.accumulate ? fn.call(this, pendingArgs) : fn.apply(this, pendingArgs[pendingArgs.length - 1])).then(thisDeferred.resolve, thisDeferred.reject);\n\n    pendingArgs = [];\n    deferred = null;\n  }\n};\n\nfunction getWait(wait) {\n  return typeof wait === 'function' ? wait() : wait;\n}\n\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n//# sourceMappingURL=index.js.map","export const endpoint = 'https://4ibvog74h7.execute-api.us-east-1.amazonaws.com/dev';\n","import debounce from 'debounce-promise'\nimport {endpoint} from './api'\n\nconst fetch_lrsdata = (activity_id, user_id) =>\n  fetch(`${endpoint}/lrs/activities/${activity_id}?user_id=${user_id}`)\n    .then(res => res.json())\nconst get_lrsdata = debounce(fetch_lrsdata, 700);\n\nexport const get_records = ({activity_id, user_id}) => (state, actions) => {\n  console.log('get_records', activity_id, user_id)\n  get_lrsdata(activity_id, user_id)\n    .then(actions.set_lrsdata)\n    .then(actions.log_state)\n  return { activity_id, displaydata: [] }\n};\n\nexport const set_lrsdata = lrsdata => (\n  { lrsdata, displaydata: lrsdata.lrsEvents }\n);","import debounce from 'debounce-promise'\nimport {endpoint} from './api'\n\nconst fetch_users = (actions) =>\n  fetch(`${endpoint}/users`)\n    .then(res => res.json())\n\nexport const get_users = () => (state, actions) => {\n  fetch_users(actions)\n    .then(actions.set_users)\n    .then(actions.log_state)\n  return {}\n};\n\nexport const set_users = (users) => ({ users })\n\nexport const user_select = user_id => (state, actions) => {\n  console.log('user_id', user_id)\n  actions.get_records({activity_id: state.activity_id, user_id})\n  let uu = state.users.filter( u => u.id == user_id )[0]\n  return { user: { id: uu.id, email: uu.email } }\n};","import { get_records, set_lrsdata } from './records'\nimport { get_users, set_users, user_select } from './users'\n\nexport const actions = {\n  log_state: () => state => {\n    window.__state = state;\n    console.log(\"state:\", state);\n  },\n  get_records,\n  set_lrsdata,\n  get_users,\n  set_users,\n  user_select,\n}","import { app } from 'hyperapp';\nimport { view } from './view';\nimport { state } from './state';\nimport { actions } from './actions/actions';\nimport './app.scss';\n\napp(state, actions, view, document.body);\n"]}